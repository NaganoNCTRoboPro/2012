Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                              i2c.o (__udivmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
                              uart.o (__udivmodsi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                              wait.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
LOAD main.o
LOAD i2c.o
LOAD wait.o
LOAD uart.o
LOAD mu2.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x10b8
 *(.vectors)
 .vectors       0x00000000       0x8c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000008c                . = ALIGN (0x2)
                0x0000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000008c        0x0 linker stubs
 *(.trampolines*)
                0x0000008c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000008c                __ctors_start = .
 *(.ctors)
                0x0000008c                __ctors_end = .
                0x0000008c                __dtors_start = .
 *(.dtors)
                0x0000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000008c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x0000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000008c        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000098       0x1a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x00000098                __do_copy_data
 .init4         0x000000b2       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000c2        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 *(.init9)
 *(.text)
 .text          0x000000ca        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
                0x000000ca                __vector_1
                0x000000ca                __vector_32
                0x000000ca                __vector_34
                0x000000ca                __vector_24
                0x000000ca                __vector_12
                0x000000ca                __bad_interrupt
                0x000000ca                __vector_6
                0x000000ca                __vector_31
                0x000000ca                __vector_3
                0x000000ca                __vector_23
                0x000000ca                __vector_25
                0x000000ca                __vector_11
                0x000000ca                __vector_13
                0x000000ca                __vector_17
                0x000000ca                __vector_19
                0x000000ca                __vector_7
                0x000000ca                __vector_27
                0x000000ca                __vector_5
                0x000000ca                __vector_33
                0x000000ca                __vector_4
                0x000000ca                __vector_9
                0x000000ca                __vector_2
                0x000000ca                __vector_15
                0x000000ca                __vector_8
                0x000000ca                __vector_26
                0x000000ca                __vector_14
                0x000000ca                __vector_10
                0x000000ca                __vector_16
                0x000000ca                __vector_18
 .text          0x000000ce      0x186 main.o
                0x0000022a                initLED
                0x000000ce                main
                0x000001b6                LED
 .text          0x00000254      0x418 i2c.o
                0x0000038a                i2cRead
                0x00000254                initI2CMaster
                0x00000296                i2cWrite
                0x000004cc                i2cReadWithCommand
 .text          0x0000066c       0x70 wait.o
                0x0000066c                wait_us
                0x00000698                wait_ms
 .text          0x000006dc      0x522 uart.o
                0x0000099a                __vector_22
                0x00000b98                __vector_28
                0x00000894                uart1Puts
                0x0000081e                uart0Get
                0x0000083c                uart1Get
                0x00000a00                __vector_30
                0x000007f0                uart1Put
                0x00000956                setReceiveCompleteInterruptFunc
                0x0000085a                uart0Puts
                0x00000a66                __vector_21
                0x00000acc                __vector_29
                0x000006dc                initUART
                0x00000912                setDataRegisterEmptyFunc
                0x000008ce                setTransmitCompleteInterruptFunc
                0x00000b32                __vector_20
                0x000007c2                uart0Put
 .text          0x00000bfe      0x44a mu2.o
                0x00000c46                byteToString
                0x00000f06                mu2TransmitData
                0x00000bfe                setMU2PutFunc
                0x00000ca2                mu2Command
                0x00000c22                setMU2GetFunc
                0x00000dc8                mu2CommandToEEPROM
 .text          0x00001048        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 .text          0x00001048        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
 .text          0x00001048        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x00001048        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x00001048                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001048       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x00001048                __udivmodhi4
 .text.libgcc   0x00001070       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
                0x00001070                __udivmodsi4
 .text.libgcc   0x000010b4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x000010b4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x000010b4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000010b4        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x000010b4                exit
                0x000010b4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000010b4        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x000010b8                _etext = .

.data           0x00800100       0x10 load address 0x000010b8
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .data          0x00800100        0x0 main.o
 .data          0x00800100        0x0 i2c.o
 .data          0x00800100        0x0 wait.o
 .data          0x00800100        0x0 uart.o
 .data          0x00800100       0x10 mu2.o
 .data          0x00800110        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 .data          0x00800110        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
 .data          0x00800110        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .data          0x00800110        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800110                . = ALIGN (0x2)
                0x00800110                _edata = .
                0x00800110                PROVIDE (__data_end, .)

.bss            0x00800110       0x11
                0x00800110                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800110        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm1284p.o
 .bss           0x00800110        0x0 main.o
 .bss           0x00800110        0x0 i2c.o
 .bss           0x00800110        0x1 wait.o
 .bss           0x00800111        0xc uart.o
 .bss           0x0080011d        0x4 mu2.o
 .bss           0x00800121        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 .bss           0x00800121        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodsi4.o)
 .bss           0x00800121        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .bss           0x00800121        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800121                PROVIDE (__bss_end, .)
                0x000010b8                __data_load_start = LOADADDR (.data)
                0x000010c8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800121        0x0
                0x00800121                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800121                PROVIDE (__noinit_end, .)
                0x00800121                _end = .
                0x00800121                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xa0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 i2c.o
 .debug_aranges
                0x00000040       0x20 wait.o
 .debug_aranges
                0x00000060       0x20 uart.o
 .debug_aranges
                0x00000080       0x20 mu2.o

.debug_pubnames
                0x00000000      0x263
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x2f main.o
 .debug_pubnames
                0x0000002f       0x54 i2c.o
 .debug_pubnames
                0x00000083       0x2a wait.o
 .debug_pubnames
                0x000000ad      0x135 uart.o
 .debug_pubnames
                0x000001e2       0x81 mu2.o

.debug_info     0x00000000      0xb90
 *(.debug_info)
 .debug_info    0x00000000      0x1a5 main.o
 .debug_info    0x000001a5      0x2ce i2c.o
 .debug_info    0x00000473       0xc0 wait.o
 .debug_info    0x00000533      0x3c0 uart.o
 .debug_info    0x000008f3      0x29d mu2.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x42b
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xe9 main.o
 .debug_abbrev  0x000000e9      0x104 i2c.o
 .debug_abbrev  0x000001ed       0x81 wait.o
 .debug_abbrev  0x0000026e       0xd6 uart.o
 .debug_abbrev  0x00000344       0xe7 mu2.o

.debug_line     0x00000000      0xad6
 *(.debug_line)
 .debug_line    0x00000000      0x1a8 main.o
 .debug_line    0x000001a8      0x301 i2c.o
 .debug_line    0x000004a9       0xb9 wait.o
 .debug_line    0x00000562      0x2e5 uart.o
 .debug_line    0x00000847      0x28f mu2.o

.debug_frame    0x00000000      0x240
 *(.debug_frame)
 .debug_frame   0x00000000       0x40 main.o
 .debug_frame   0x00000040       0x50 i2c.o
 .debug_frame   0x00000090       0x30 wait.o
 .debug_frame   0x000000c0      0x110 uart.o
 .debug_frame   0x000001d0       0x70 mu2.o

.debug_str      0x00000000      0x6ab
 *(.debug_str)
 .debug_str     0x00000000       0xe2 main.o
                                0x122 (size before relaxing)
 .debug_str     0x000000e2      0x28b i2c.o
                                0x385 (size before relaxing)
 .debug_str     0x0000036d       0x25 wait.o
                                 0xd8 (size before relaxing)
 .debug_str     0x00000392      0x28e uart.o
                                0x346 (size before relaxing)
 .debug_str     0x00000620       0x8b mu2.o
                                0x154 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(mudule_test.elf elf32-avr)
LOAD linker stubs
